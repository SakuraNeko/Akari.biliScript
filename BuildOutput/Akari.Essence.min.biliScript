/* Akari.biliScript - v20150806 essence
 * Copyright (C) 2015 
 * This copy is minimized: access source from the github page below.
 * <https://github.com/akaza-akari/Akari.biliScript>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * As additional permission under GNU GPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 */
if(Global._get("__isExecuted_akari")){stopExecution();}Akari={};Akari.execute=function(mainComp){Global._set("__mainComp_akari",mainComp);mainComp.present();Global._set("__isExecuted_akari",true);};Akari.stop=function(){if(Akari.isExecuted()){(Global._get("__mainComp_akari")).detach();Global._set("__mainComp_akari",null);Global._set("__isExecuted_akari",null);}};Akari.isExecuted=function(){return(Global._get("__isExecuted_akari")===true);};Akari.root=function(){if($.hasOwnProperty("root")&& $.root){return $.root;}else{var sprite=$.createCanvas({lifeTime:810114514});ScriptManager.popEl(sprite);sprite.transform.matrix3D=null;return sprite;}}();Akari.Utilities={};Akari.Utilities.Factory={collapse:function(arrays){var result=[];for(var i=0;i < arrays.length;i++){result=result.concat(arrays[i]);}return result;},extend:function(destination,source){foreach(source,function(key,object){destination[key.toString()]=object;});return destination;},clone:function(object,scope){if(! object){return object;}if(object.hasOwnProperty("clone")){return object.clone();
}else if(typeof object==="function"){return function(){return object.apply(scope,arguments);};}else{var newObject={};var countProperties=0;foreach(object,function(key,object){countProperties++;if(typeof object==="function"){newObject[key]=function(){return object.apply(newObject,arguments);};}else{var adg=Akari.Utilities.Factory.clone(object);newObject[key]=adg;}});if(countProperties===0){newObject=clone(object);if(object.hasOwnProperty("numChildren")|| object.hasOwnProperty("graphics")){newObject=$.createCanvas({lifeTime:810114514});ScriptManager.popEl(newObject);newObject.alpha=object.alpha;newObject.blendMode=object.blendMode;newObject.filters=object.filters;newObject.rotationX=object.rotationX;newObject.rotationY=object.rotationY;newObject.rotationZ=object.rotationZ;newObject.scaleX=object.scaleX;newObject.scaleY=object.scaleY;newObject.scaleZ=object.scaleZ;newObject.scrollRect=object.scrollRect;newObject.transform.colorTransform=object.transform.colorTransform;newObject.transform.matrix=object.transform.matrix;
newObject.transform.matrix3D=object.transform.matrix3D;}if(object.hasOwnProperty("numChildren")){for(var i=0;i < object.numChildren;i++){newObject.addChild(Akari.Utilities.Factory.clone(object.getChildAt(i)));}}if(object.hasOwnProperty("graphics")){newObject.graphics.copyFrom(object.graphics);}}return newObject;}},replicate:function(constructor,count,paramsFunction){var objects=[];var i=0;for(i=0;i < count;i++){var newParams;newParams=paramsFunction ? paramsFunction(i):[];objects.push(constructor.apply(this,newParams));}return objects;}};Akari.Utilities.Timer=function(){var lastTime=0;var deltaTime=0;var sampleCount=1;return{time:0,update:function(){if(Player.time !=lastTime){if(Math.abs(Player.time-lastTime)< 1000){deltaTime=(Player.time-lastTime)/sampleCount;lastTime=Player.time;sampleCount=1;this.time=Player.time;}else{deltaTime=0;lastTime=Player.time;sampleCount=1;this.time=Player.time;}}else{this.time=lastTime+deltaTime*sampleCount;sampleCount++;}}};}();Akari.Utilities.Binder=function(){var binderClass=function(params){var registry=[];
var lookup={};var needRefresh=true;var setParam=function(object,name,value){var dotIndex=name.indexOf(".");if(dotIndex < 0){if(params.overridePathCheck || object.hasOwnProperty(name)){object[name]=value;}}else{var midName=name.substring(0,dotIndex);if(params.overridePathCheck){if(!object.hasOwnProperty(midName)){object[midName]={};}setParam(object[midName],name.substring(dotIndex+1),value);}else{if(object.hasOwnProperty(midName)){setParam(object[midName],name.substring(dotIndex+1),value);}}}};foreach(params.properties,function(key,obj){var changeType=null;var value=null;if(typeof(obj)==="function"){changeType=100;}else if(obj.hasOwnProperty("linkFunc")){changeType=obj.linkFunc ? 201:200;}else if(obj.hasOwnProperty("multiFunc")){changeType=300;}else{value=obj;}registry.push([key,obj,changeType,[],value]);});for(var k=registry.length;k--;){lookup[registry[k][0]]=k;}for(var k=registry.length;k--;){if(registry[k][2]===201 || registry[k][2]===200){var dependency=[];var names=[registry[k][1].names];while(names.length > 0){var currentNames=names.pop();
dependency=dependency.concat(currentNames);for(var n=currentNames.length;n--;){if(registry[0+lookup[""+currentNames[n]]][2]===201 || registry[0+lookup[""+currentNames[n]]][2]===200){names.push(registry[0+lookup[""+currentNames[n]]][1].names);}}}registry[k][3]=dependency;}}registry.sort(function(a,b){if(a[3].length !==0 && b[3].length===0){return 1;}if(a[3].length===0 && b[3].length !==0){return-1;}if(a[3].indexOf(b[0])>=0){return 1;}if(b[3].indexOf(a[0])>=0){return-1;}if(a[2]&& !b[2]){return 1;}else if(b[2]&& !a[2]){return-1;}return 0;});var loopStart=registry.length;for(var k=registry.length;k--;){lookup[registry[k][0]]=k;if(registry[k][2]){loopStart=k;}else{setParam(params.object,registry[k][0],registry[k][4]);}}return{update:function(time,scope){for(var i=loopStart;i < registry.length;i++){switch(registry[i][2]){case 100:registry[i][4]=registry[i][1].apply(scope || params.object,[time]);break;case 200:registry[i][4]=registry[0+lookup[""+registry[i][3][0]]][4];break;case 201:var funcArgs=[];var names=registry[i][3];
for(var a=0;a < names.length;a++){funcArgs.push(registry[0+lookup[""+names[a]]][4]);}funcArgs.push(time);registry[i][4]=registry[i][1].linkFunc.apply(scope || params.object,funcArgs);break;case 300:registry[i][4]=registry[i][1].multiFunc.apply(scope || params.object,[time]);var names=registry[i][1].names;for(var a=0;a < names.length;a++){setParam(params.object,names[a],registry[i][4][a]);}break;}setParam(params.object,registry[i][0],registry[i][4]);}}};};binderClass.Link=function(params){return{names:params.names ||[params.name],linkFunc:params.linkFunc || null};};binderClass.Multi=function(params){return{names:params.names,multiFunc:params.func};};return binderClass;}();Akari.Display={};Akari.Display.Layer=function(params){var binder=Akari.Utilities.Binder({object:params.source,properties:params.properties ||{}});var layer={source:params.source,inPoint:params.inPoint,outPoint:params.outPoint,update:function(time){if(time < params.inPoint || time >=params.outPoint){this.source.visible=false;}else{this.source.visible=true;
binder.update(time,this.getBinderScope());}},getBinderScope:function(){return this;},clone:function(){return Akari.Display.Layer(Akari.Utilities.Factory.clone(params));}};if(params.effects){for(var i=0;i < params.effects.length;i++){layer=params.effects[i][0].stackInterface(layer,params.effects[i][1]);}}layer.update(params.inPoint);return layer;};Akari.Display.DynamicSourceLayer=function(params){var nestedProvider=params.provider;var inPointTime=params.inPointTime || nestedProvider.startTime;var outPointTime=params.outPointTime || nestedProvider.startTime+nestedProvider.duration;var layer=Akari.Display.Layer({source:nestedProvider.canvas,inPoint:params.inPoint,outPoint:params.outPoint,properties:params.properties});var baseUpdate=Akari.Utilities.Factory.clone(layer.update,layer);if(params.timeRemap){layer.update=function(time){baseUpdate(time);if(this.source.visible)nestedProvider.update(params.timeRemap(time));};}else{layer.update=function(time){baseUpdate(time);if(this.source.visible)nestedProvider.update(inPointTime+(time-params.inPoint)*(outPointTime-inPointTime)/(params.outPoint-params.inPoint));
};}layer.clone=function(){return Akari.Display.DynamicSourceLayer(Akari.Utilities.Factory.clone(params));};if(params.effects){for(var i=0;i < params.effects.length;i++){layer=params.effects[i][0].stackInterface(layer,params.effects[i][1]);}}layer.update(params.inPoint);return layer;};Akari.Display.Composition=function(params){var canvas=Akari.Display.Sprite();if(params.hasBoundaries){var solidMask=Akari.Display.Solid({width:params.width || $.width,height:params.height || $.height,color:0x0});canvas.addChild(solidMask);canvas.mask=solidMask;}var layers=Akari.Utilities.Factory.collapse(params.layers ||[]);var i=0;for(i=0;i < layers.length;i++){canvas.addChild(layers[i].source);layers[i].parent=this;}return{width:params.width || $.width,height:params.height || $.height,startTime:params.startTime || 0,duration:params.duration || 60000,layers:layers,canvas:canvas,update:function(time){if(time < startTime)return this.update(startTime);if(time >=startTime+duration)return this.update(startTime+duration-1);for(var i=layers.length;
i--;){var lr=layers[0+i];if(time < lr.inPoint || time >=lr.outPoint){lr.source.visible=false;}else{lr.source.visible=true;lr.update(time);}}},clone:function(){return Akari.Display.Composition(Akari.Utilities.Factory.clone(params));}};};Akari.Display.MainComposition=function(params){if(!(params.hasBoundaries===false)){params.hasBoundaries=true;}var composition=Akari.Display.Composition(params);var lastUpdate=-1;var lastWidth,lastHeight;var frameFunction=function(){if(Player.state==="playing"){Akari.Utilities.Timer.update();composition.update(Akari.Utilities.Timer.time);}else{if(lastUpdate !=Player.time)composition.update(Player.time);}if($.width !=lastWidth || $.height !=lastHeight){maximizeInContainer();lastWidth=$.width;lastHeight=$.height;}};var maximizeInContainer=function(){ratio=Math.min($.width/Akari.root.scaleX/composition.width,$.height/Akari.root.scaleY/composition.height);composition.canvas.scaleX=ratio;composition.canvas.scaleY=ratio;composition.canvas.x=($.width/Akari.root.scaleX-composition.width*ratio)/2;
composition.canvas.y=($.height/Akari.root.scaleY-composition.height*ratio)/2;};var baseUpdate=Akari.Utilities.Factory.clone(composition.update,composition);composition.update=function(time){lastUpdate=time;baseUpdate(time);};composition.present=function(){this.canvas.addEventListener("enterFrame",frameFunction);Akari.root.addChild(this.canvas);frameFunction();};composition.detach=function(){this.canvas.removeEventListener("enterFrame",frameFunction);Akari.root.removeChild(this.canvas);};composition.clone=function(){return Akari.Display.MainComposition(Akari.Utilities.Factory.clone(params));};return composition;};Akari.Display.MainComposition.getInstance=function(){return Global._get("__mainComp_akari");};Akari.Display.Animation=function(params){var lastFrame=0;var frameRate=params.frameRate || 12;var findCurrentIndex=function(time){return Math.floor(time*frameRate/1000);};var canvas=Akari.Display.Shape();return{startTime:0,duration:params.frames.length*1000/frameRate,canvas:canvas,update:function(time){var currentFrame=findCurrentIndex(time);
if(currentFrame===lastFrame)return;canvas.graphics.clear();params.frames[currentFrame](canvas.graphics);lastFrame=currentFrame;},clone:function(){return Akari.Display.Animation(Akari.Utilities.Factory.clone(params));}};};Akari.Display.Sprite=function(){var sprite=$.createCanvas({lifeTime:810114514});ScriptManager.popEl(sprite);sprite.transform.matrix3D=null;return sprite;};Akari.Display.Shape=function(){var shape=$.createShape({lifeTime:810114514});ScriptManager.popEl(shape);shape.transform.matrix3D=null;return shape;};Akari.Display.Text=function(preserveGlow){var text=$.createComment("",{lifeTime:810114514});ScriptManager.popEl(text);if(!preserveGlow)text.filters=null;text.transform.matrix3D=null;return text;};Akari.Display.Solid=function(params){var shape=Akari.Display.Shape();shape.graphics.beginFill(params.color);shape.graphics.drawRect(0,0,params.width,params.height);shape.graphics.endFill();return shape;};Global._set("__akari",Akari);